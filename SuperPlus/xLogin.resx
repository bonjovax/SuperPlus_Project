<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="applicationMenu1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADAQMAAgECAwQCBAwEAgQMBAIEDAQCBAwEAgQMBAIECwQCAgEEAgIAAAAAAAAA
        AAAAAAAAAAAAAAAAAACEgoQA////AVVTVT4IBgiqBAIEwwQCBMEEAgTBBAIDwwQDE5wEDJM3BAIFAAQO
        rAAAAAAAAAAAAAAAAAAAAAAAhIKEAIWDhRyDgYO4JCIkwQMBA/8EAgT/BAIE/wQCAfkEB029BA6utgQO
        rBIEDqwAAAAAAAAAAAAAAAAAhIKEAISChACEgoRrhoSG/GJgYr0EAgTnBAIE/wQCBP8EAgvYBAyXyQQO
        rfoEDqxaBA6sAAQOrAAAAAAAAAAAAISChACEgoQUhIKEyISChP+DgYPhHhwevgMBA/8EAgL7BAZCtgQO
        ru8EDqz/BA6suwQOrA4EDqwAAAAAAISChACEgoQAhIKEX4SChPqEgoT/hoSG/VxaXLoDAQPtBAIH3QQM
        kcIEDq3/BA6s/wQOrPYEDqxQBA6sAAQOrACEgoQAhYOEEYSChMGEgoT/hIKE/4SChP+CgIHeGxkYwgIE
        ObwEDq3sBA6s/wQOrP8EDqz/BA6sswIMrQsDDK0AgX+FAIB+hUKCgIXWgoCF3oKAhd2CgIXdg4GG21pY
        XYsKEYeTDBWr1AsVqtMLFarTCxWq1AwVqccTG6cxEBioABUcpwAbIqVDFBynxRQcp8cUHKfHFBynxxQc
        qMkTGYyCaWhyi358h9J9fIbRfXyG0X18htF8e4bKeXiHO3p5hwACDK0AAgytGwMNrNADDaz/Aw2s/wMN
        rP8DDa7sAQM7uC8tLLeFg4XshIKE/4SChP+EgoT/hIKEw4aDgxKFg4QABA6sAAQOrAAEDqxzBA6s/gQO
        rP8EDq3/BAyTwwQCCNwHBQfecG5wxIWDhf+EgoT/hIKE+4SChGCEgoQAhIKEAAAAAAAEDqwABA6sIAQO
        rNYEDqz/BA6u8AQHRLcEAgL7AgAC+zMxM7aFg4XuhIKE/4SChMqEgoQWhIKEAAAAAAAAAAAABA6sAAQO
        rAAEDqx9BA6t/wQNmckEAwvXBAIE/wQCBP8JBwnYdHJ0yIWDhf+EgoRthIKEAISChAAAAAAAAAAAAAAA
        AAAEDqwABA6sJwQOrtEEB0+6BAIB+QQCBP8EAgT/AgAC+To4OruGhIbGhIKEHYSChAAAAAAAAAAAAAAA
        AAAAAAAABA6sAAQR2QMEDZdVBAMTsAQCA9kEAgTXBAIE1gQCBNcODA6xbm1uSvHu8QGEgoQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEAAAABAU1BQQCBRkEAgQbBAIEGwQCBBoEAgQZBAIEGAsKCwQDAgMAAAAAAAAA
        AAAAAAAA8A8AAOAPAADgBwAA4AcAAMADAADAAwAAgAEAAIABAACAAQAAgAEAAMADAADAAwAA4AcAAOAH
        AADgBwAA8A8AAA==
</value>
  </data>
</root>